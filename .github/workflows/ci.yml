name: CI

on:
  push:
    branches: 
      - master
      - integration
      - experimental*
      - release_*
  repository_dispatch:
    types:
      - metwork-trigger*

env:
    WORKFLOW_SCRIPTS_DIR: .github/workflows
    DOCKER_WORKFLOW_SCRIPTS_DIR: /src/.github/workflows
    PAYLOAD_BRANCH: ${{ github.event.client_payload.branch}}

jobs:
  ci_build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.client_payload.branch || github.ref }}
      - name: set variables
        id: SetVariables
        run: |
          ${WORKFLOW_SCRIPTS_DIR}/set_variables.sh
      - name: debug env
        run: |
          env
          echo "\nDockerfile\n"
          cat ./Dockerfile
      - name: Login to DockerHub
        run: |
          docker login -p ${{ secrets.DOCKER_PASSWORD }} -u ${{ secrets.DOCKER_USERNAME }}
      - name: docker pull image
        run: |
          docker pull ${{ steps.SetVariables.outputs.tag_branch }}
          HASH_BEFORE=`docker images -q ${{ steps.SetVariables.outputs.tag_branch }}`
      - name: docker build
        if: ${{ steps.SetVariables.outputs.branch != 'master' }}
        run: |
          docker build -t ${{ steps.SetVariables.outputs.tag_branch }} --build-arg BRANCH=${{ steps.SetVariables.outputs.branch }} --build-arg CACHEBUST=${{ github.run_number }} .
          HASH_AFTER=`docker images -q ${{ steps.SetVariables.outputs.tag_branch }}`
      - name: docker build master
        if: ${{ steps.SetVariables.outputs.branch == 'master' }}
        run: |
          docker build -t ${{ steps.SetVariables.outputs.tag_branch }} -t ${{ steps.SetVariables.outputs.tag_latest }} --build-arg BRANCH=${{ steps.SetVariables.outputs.branch }} --build-arg CACHEBUST=${{ github.run_number }} .
      - name: docker push
        if: ${{ steps.SetVariables.outputs.branch != 'master' }}
        run: |
          docker push ${{ steps.SetVariables.outputs.tag_branch }}
      - name: docker push master
        if: ${{ steps.SetVariables.outputs.branch == 'master' }}
        run: |
          docker push ${{ steps.SetVariables.outputs.tag_branch }}
          docker push ${{ steps.SetVariables.outputs.tag_latest }}
          
      
